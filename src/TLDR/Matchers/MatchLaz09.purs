module TLDR.Matchers.MatchLaz09 where

import Prim.TypeError (Beside, Text)
import TLDR.Result (Failure, SingleFailure, Success)

class Matchaz09 :: Symbol -> Type -> Constraint
class Matchaz09 i o | i -> o

instance Matchaz09 "a" (Success "a" "")
else instance Matchaz09 "b" (Success "b" "")
else instance Matchaz09 "c" (Success "c" "")
else instance Matchaz09 "d" (Success "d" "")
else instance Matchaz09 "e" (Success "e" "")
else instance Matchaz09 "f" (Success "f" "")
else instance Matchaz09 "g" (Success "g" "")
else instance Matchaz09 "h" (Success "h" "")
else instance Matchaz09 "i" (Success "i" "")
else instance Matchaz09 "j" (Success "j" "")
else instance Matchaz09 "k" (Success "k" "")
else instance Matchaz09 "l" (Success "l" "")
else instance Matchaz09 "m" (Success "m" "")
else instance Matchaz09 "n" (Success "n" "")
else instance Matchaz09 "o" (Success "o" "")
else instance Matchaz09 "p" (Success "p" "")
else instance Matchaz09 "q" (Success "q" "")
else instance Matchaz09 "r" (Success "r" "")
else instance Matchaz09 "s" (Success "s" "")
else instance Matchaz09 "t" (Success "t" "")
else instance Matchaz09 "u" (Success "u" "")
else instance Matchaz09 "v" (Success "v" "")
else instance Matchaz09 "w" (Success "w" "")
else instance Matchaz09 "x" (Success "x" "")
else instance Matchaz09 "y" (Success "y" "")
else instance Matchaz09 "z" (Success "z" "")
else instance Matchaz09 "0" (Success "0" "")
else instance Matchaz09 "1" (Success "1" "")
else instance Matchaz09 "2" (Success "2" "")
else instance Matchaz09 "3" (Success "3" "")
else instance Matchaz09 "4" (Success "4" "")
else instance Matchaz09 "5" (Success "5" "")
else instance Matchaz09 "6" (Success "6" "")
else instance Matchaz09 "7" (Success "7" "")
else instance Matchaz09 "8" (Success "8" "")
else instance Matchaz09 "9" (Success "9" "")
else instance Matchaz09 fail (Failure (SingleFailure (Beside (Text "Could not match a-z0-9 against ") (Text fail)) ))