module TLDR.Matchers.MatchAlphanumeric where

import Prim.TypeError (Beside, Text)
import TLDR.Result (Failure, SingleFailure, Success)

class MatchAlphanumeric :: Symbol -> Type -> Constraint
class MatchAlphanumeric i o | i -> o

instance MatchAlphanumeric "a" (Success "a" "")
else instance MatchAlphanumeric "b" (Success "b" "")
else instance MatchAlphanumeric "c" (Success "c" "")
else instance MatchAlphanumeric "d" (Success "d" "")
else instance MatchAlphanumeric "e" (Success "e" "")
else instance MatchAlphanumeric "f" (Success "f" "")
else instance MatchAlphanumeric "g" (Success "g" "")
else instance MatchAlphanumeric "h" (Success "h" "")
else instance MatchAlphanumeric "i" (Success "i" "")
else instance MatchAlphanumeric "j" (Success "j" "")
else instance MatchAlphanumeric "k" (Success "k" "")
else instance MatchAlphanumeric "l" (Success "l" "")
else instance MatchAlphanumeric "m" (Success "m" "")
else instance MatchAlphanumeric "n" (Success "n" "")
else instance MatchAlphanumeric "o" (Success "o" "")
else instance MatchAlphanumeric "p" (Success "p" "")
else instance MatchAlphanumeric "q" (Success "q" "")
else instance MatchAlphanumeric "r" (Success "r" "")
else instance MatchAlphanumeric "s" (Success "s" "")
else instance MatchAlphanumeric "t" (Success "t" "")
else instance MatchAlphanumeric "u" (Success "u" "")
else instance MatchAlphanumeric "v" (Success "v" "")
else instance MatchAlphanumeric "w" (Success "w" "")
else instance MatchAlphanumeric "x" (Success "x" "")
else instance MatchAlphanumeric "y" (Success "y" "")
else instance MatchAlphanumeric "z" (Success "z" "")
else instance MatchAlphanumeric "A" (Success "A" "")
else instance MatchAlphanumeric "B" (Success "B" "")
else instance MatchAlphanumeric "C" (Success "C" "")
else instance MatchAlphanumeric "D" (Success "D" "")
else instance MatchAlphanumeric "E" (Success "E" "")
else instance MatchAlphanumeric "F" (Success "F" "")
else instance MatchAlphanumeric "G" (Success "G" "")
else instance MatchAlphanumeric "H" (Success "H" "")
else instance MatchAlphanumeric "I" (Success "I" "")
else instance MatchAlphanumeric "J" (Success "J" "")
else instance MatchAlphanumeric "K" (Success "K" "")
else instance MatchAlphanumeric "L" (Success "L" "")
else instance MatchAlphanumeric "M" (Success "M" "")
else instance MatchAlphanumeric "N" (Success "N" "")
else instance MatchAlphanumeric "O" (Success "O" "")
else instance MatchAlphanumeric "P" (Success "P" "")
else instance MatchAlphanumeric "Q" (Success "Q" "")
else instance MatchAlphanumeric "R" (Success "R" "")
else instance MatchAlphanumeric "S" (Success "S" "")
else instance MatchAlphanumeric "T" (Success "T" "")
else instance MatchAlphanumeric "U" (Success "U" "")
else instance MatchAlphanumeric "V" (Success "V" "")
else instance MatchAlphanumeric "W" (Success "W" "")
else instance MatchAlphanumeric "X" (Success "X" "")
else instance MatchAlphanumeric "Y" (Success "Y" "")
else instance MatchAlphanumeric "Z" (Success "Z" "")
else instance MatchAlphanumeric "0" (Success "0" "")
else instance MatchAlphanumeric "1" (Success "1" "")
else instance MatchAlphanumeric "2" (Success "2" "")
else instance MatchAlphanumeric "3" (Success "3" "")
else instance MatchAlphanumeric "4" (Success "4" "")
else instance MatchAlphanumeric "5" (Success "5" "")
else instance MatchAlphanumeric "6" (Success "6" "")
else instance MatchAlphanumeric "7" (Success "7" "")
else instance MatchAlphanumeric "8" (Success "8" "")
else instance MatchAlphanumeric "9" (Success "9" "")
else instance MatchAlphanumeric fail (Failure (SingleFailure (Beside (Text "Could not match a-zA-Z0-9 against ") (Text fail))))
