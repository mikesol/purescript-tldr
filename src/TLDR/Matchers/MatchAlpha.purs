module TLDR.Matchers.MatchAlpha where

import Prim.TypeError (Beside, Text)
import TLDR.Result (Failure, SingleFailure, Success)

class MatchAlpha :: Symbol -> Type -> Constraint
class MatchAlpha i o | i -> o

instance MatchAlpha "a" (Success "a" "")
else instance MatchAlpha "b" (Success "b" "")
else instance MatchAlpha "c" (Success "c" "")
else instance MatchAlpha "d" (Success "d" "")
else instance MatchAlpha "e" (Success "e" "")
else instance MatchAlpha "f" (Success "f" "")
else instance MatchAlpha "g" (Success "g" "")
else instance MatchAlpha "h" (Success "h" "")
else instance MatchAlpha "i" (Success "i" "")
else instance MatchAlpha "j" (Success "j" "")
else instance MatchAlpha "k" (Success "k" "")
else instance MatchAlpha "l" (Success "l" "")
else instance MatchAlpha "m" (Success "m" "")
else instance MatchAlpha "n" (Success "n" "")
else instance MatchAlpha "o" (Success "o" "")
else instance MatchAlpha "p" (Success "p" "")
else instance MatchAlpha "q" (Success "q" "")
else instance MatchAlpha "r" (Success "r" "")
else instance MatchAlpha "s" (Success "s" "")
else instance MatchAlpha "t" (Success "t" "")
else instance MatchAlpha "u" (Success "u" "")
else instance MatchAlpha "v" (Success "v" "")
else instance MatchAlpha "w" (Success "w" "")
else instance MatchAlpha "x" (Success "x" "")
else instance MatchAlpha "y" (Success "y" "")
else instance MatchAlpha "z" (Success "z" "")
else instance MatchAlpha "A" (Success "A" "")
else instance MatchAlpha "B" (Success "B" "")
else instance MatchAlpha "C" (Success "C" "")
else instance MatchAlpha "D" (Success "D" "")
else instance MatchAlpha "E" (Success "E" "")
else instance MatchAlpha "F" (Success "F" "")
else instance MatchAlpha "G" (Success "G" "")
else instance MatchAlpha "H" (Success "H" "")
else instance MatchAlpha "I" (Success "I" "")
else instance MatchAlpha "J" (Success "J" "")
else instance MatchAlpha "K" (Success "K" "")
else instance MatchAlpha "L" (Success "L" "")
else instance MatchAlpha "M" (Success "M" "")
else instance MatchAlpha "N" (Success "N" "")
else instance MatchAlpha "O" (Success "O" "")
else instance MatchAlpha "P" (Success "P" "")
else instance MatchAlpha "Q" (Success "Q" "")
else instance MatchAlpha "R" (Success "R" "")
else instance MatchAlpha "S" (Success "S" "")
else instance MatchAlpha "T" (Success "T" "")
else instance MatchAlpha "U" (Success "U" "")
else instance MatchAlpha "V" (Success "V" "")
else instance MatchAlpha "W" (Success "W" "")
else instance MatchAlpha "X" (Success "X" "")
else instance MatchAlpha "Y" (Success "Y" "")
else instance MatchAlpha "Z" (Success "Z" "")
else instance MatchAlpha fail (Failure (SingleFailure (Beside (Text "Could not match a-zA-Z against ") (Text fail)) ))
